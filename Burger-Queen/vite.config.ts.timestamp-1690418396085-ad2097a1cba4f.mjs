// vite.config.ts
import { VitePWA } from "file:///C:/Users/cesar/Documents/Burger-Queen-API-Client/Burger-Queen/node_modules/vite-plugin-pwa/dist/index.js";
import { defineConfig } from "file:///C:/Users/cesar/Documents/Burger-Queen-API-Client/Burger-Queen/node_modules/vite/dist/node/index.js";
import react from "file:///C:/Users/cesar/Documents/Burger-Queen-API-Client/Burger-Queen/node_modules/@vitejs/plugin-react/dist/index.mjs";
var vite_config_default = defineConfig({
  plugins: [
    react(),
    VitePWA({
      registerType: "prompt",
      manifest: {
        name: "Burger Queen",
        short_name: "BQ",
        start_url: ".",
        display: "standalone",
        theme_color: "#ffffff",
        background_color: "#ffffff",
        icons: [
          {
            "src": "addNewProduct.png",
            "sizes": "45x45",
            "type": "image/png",
            "purpose": "any maskable"
          },
          {
            "src": "Fondo.png",
            "sizes": "144x144",
            "type": "image/png",
            "purpose": "any maskable"
          }
          // {
          //   'src': 'cancelorange.png',
          //   'sizes': '144x144',
          //   'type': 'image/png',
          //   'purpose': 'any maskable'
          // }, 
          // {
          //   'src': 'cancelwhite.png',
          //   'sizes': '144x144',
          //   'type': 'image/png',
          //   'purpose': 'any maskable'
          // }, 
        ]
        // Add other custom properties here if needed.
      },
      devOptions: {
        enabled: true
      }
    })
  ]
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxjZXNhclxcXFxEb2N1bWVudHNcXFxcQnVyZ2VyLVF1ZWVuLUFQSS1DbGllbnRcXFxcQnVyZ2VyLVF1ZWVuXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxjZXNhclxcXFxEb2N1bWVudHNcXFxcQnVyZ2VyLVF1ZWVuLUFQSS1DbGllbnRcXFxcQnVyZ2VyLVF1ZWVuXFxcXHZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9DOi9Vc2Vycy9jZXNhci9Eb2N1bWVudHMvQnVyZ2VyLVF1ZWVuLUFQSS1DbGllbnQvQnVyZ2VyLVF1ZWVuL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgVml0ZVBXQSB9IGZyb20gJ3ZpdGUtcGx1Z2luLXB3YSc7XHJcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gJ3ZpdGUnO1xyXG5pbXBvcnQgcmVhY3QgZnJvbSAnQHZpdGVqcy9wbHVnaW4tcmVhY3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcclxuICBwbHVnaW5zOiBbXHJcbiAgICByZWFjdCgpLFxyXG4gICAgVml0ZVBXQSh7XHJcbiAgICAgIHJlZ2lzdGVyVHlwZTogJ3Byb21wdCcsXHJcbiAgICAgIG1hbmlmZXN0OiB7XHJcbiAgICAgICAgbmFtZTogJ0J1cmdlciBRdWVlbicsXHJcbiAgICAgICAgc2hvcnRfbmFtZTogJ0JRJyxcclxuICAgICAgICBzdGFydF91cmw6ICcuJyxcclxuICAgICAgICBkaXNwbGF5OiAnc3RhbmRhbG9uZScsXHJcbiAgICAgICAgdGhlbWVfY29sb3I6ICcjZmZmZmZmJyxcclxuICAgICAgICBiYWNrZ3JvdW5kX2NvbG9yOiAnI2ZmZmZmZicsXHJcbiAgICAgICAgaWNvbnM6IFtcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJ3NyYyc6ICdhZGROZXdQcm9kdWN0LnBuZycsXHJcbiAgICAgICAgICAgICdzaXplcyc6ICc0NXg0NScsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnRm9uZG8ucG5nJyxcclxuICAgICAgICAgICAgJ3NpemVzJzogJzE0NHgxNDQnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LCBcclxuICAgICAgICAgIC8vIHtcclxuICAgICAgICAgIC8vICAgJ3NyYyc6ICdjYW5jZWxvcmFuZ2UucG5nJyxcclxuICAgICAgICAgIC8vICAgJ3NpemVzJzogJzE0NHgxNDQnLFxyXG4gICAgICAgICAgLy8gICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgLy8gICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICAvLyB9LCBcclxuICAgICAgICAgIC8vIHtcclxuICAgICAgICAgIC8vICAgJ3NyYyc6ICdjYW5jZWx3aGl0ZS5wbmcnLFxyXG4gICAgICAgICAgLy8gICAnc2l6ZXMnOiAnMTQ0eDE0NCcsXHJcbiAgICAgICAgICAvLyAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAvLyAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIC8vIH0sIFxyXG4gICAgICAgIF1cclxuICAgICAgICAvLyBBZGQgb3RoZXIgY3VzdG9tIHByb3BlcnRpZXMgaGVyZSBpZiBuZWVkZWQuXHJcbiAgICAgIH0sXHJcbiAgICAgIGRldk9wdGlvbnM6IHtcclxuICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgfSksXHJcbiAgXSxcclxufSk7XHJcblxyXG4vKiAsXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnYXNzZXRzL2FcdTAwRjFhZGlyLnBuZycsXHJcbiAgICAgICAgICAgICdzaXplcyc6ICcyNHgyNCcsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnYXNzZXRzL2NhbmNlbG9yYW5nZS5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMjR4MjQnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9jYW5jZWx3aGl0ZS5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMjR4MjQnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9jaGVja2dyZWVuLnBuZycsXHJcbiAgICAgICAgICAgICdzaXplcyc6ICcyNHgyNCcsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnYXNzZXRzL2NoZWNrd2hpdGUucG5nJyxcclxuICAgICAgICAgICAgJ3NpemVzJzogJzI0eDI0JyxcclxuICAgICAgICAgICAgJ3R5cGUnOiAnaW1hZ2UvcG5nJyxcclxuICAgICAgICAgICAgJ3B1cnBvc2UnOiAnYW55IG1hc2thYmxlJ1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJ3NyYyc6ICdhc3NldHMvY2hlZi5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMzd4MzUnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9kZWxldGVpY29uLnBuZycsXHJcbiAgICAgICAgICAgICdzaXplcyc6ICczOXgzOScsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnYXNzZXRzL2Rpc21pbnVpci5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMjR4MjQnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9lZGl0SWNvbi5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMjV4MjYnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9mdWxsTG9nby5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMzk0eDM5MycsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnYXNzZXRzL2ljb25hZG1pbi5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnNTJ4NDgnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9pY29uYWRtaW5ncmVlbi5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMzd4MzUnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9pY29uY2xvY2sucG5nJyxcclxuICAgICAgICAgICAgJ3NpemVzJzogJzQweDQwJyxcclxuICAgICAgICAgICAgJ3R5cGUnOiAnaW1hZ2UvcG5nJyxcclxuICAgICAgICAgICAgJ3B1cnBvc2UnOiAnYW55IG1hc2thYmxlJ1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJ3NyYyc6ICdhc3NldHMvaWNvbmNyZWF0ZS5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMzd4MzUnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9pY29uZGVsaXZlcmVkLnBuZycsXHJcbiAgICAgICAgICAgICdzaXplcyc6ICczMngzMicsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnYXNzZXRzL2RlbGl2ZXJpbmcucG5nJyxcclxuICAgICAgICAgICAgJ3NpemVzJzogJzMyeDMyJyxcclxuICAgICAgICAgICAgJ3R5cGUnOiAnaW1hZ2UvcG5nJyxcclxuICAgICAgICAgICAgJ3B1cnBvc2UnOiAnYW55IG1hc2thYmxlJ1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJ3NyYyc6ICdhc3NldHMvaWNvbmtpdGNoZW4ucG5nJyxcclxuICAgICAgICAgICAgJ3NpemVzJzogJzUyeDQ4JyxcclxuICAgICAgICAgICAgJ3R5cGUnOiAnaW1hZ2UvcG5nJyxcclxuICAgICAgICAgICAgJ3B1cnBvc2UnOiAnYW55IG1hc2thYmxlJ1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJ3NyYyc6ICdhc3NldHMvaWNvbnJlYWR5LnBuZycsXHJcbiAgICAgICAgICAgICdzaXplcyc6ICcyNngyOScsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnYXNzZXRzL2ljb253YWl0ZXIucG5nJyxcclxuICAgICAgICAgICAgJ3NpemVzJzogJzUzeDUzJyxcclxuICAgICAgICAgICAgJ3R5cGUnOiAnaW1hZ2UvcG5nJyxcclxuICAgICAgICAgICAgJ3B1cnBvc2UnOiAnYW55IG1hc2thYmxlJ1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJ3NyYyc6ICdhc3NldHMvb3V0aWNvbi5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnNDh4NDgnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAnc3JjJzogJ2Fzc2V0cy9yZW1vdmVvcmFuZ2UucG5nJyxcclxuICAgICAgICAgICAgJ3NpemVzJzogJzI0eDI0JyxcclxuICAgICAgICAgICAgJ3R5cGUnOiAnaW1hZ2UvcG5nJyxcclxuICAgICAgICAgICAgJ3B1cnBvc2UnOiAnYW55IG1hc2thYmxlJ1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJ3NyYyc6ICdhc3NldHMvcmV0dXJuaWNvbi5wbmcnLFxyXG4gICAgICAgICAgICAnc2l6ZXMnOiAnMTQ0eDE0NCcsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2ltYWdlL3BuZycsXHJcbiAgICAgICAgICAgICdwdXJwb3NlJzogJ2FueSBtYXNrYWJsZSdcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICdzcmMnOiAnYXNzZXRzL3NlYXJjaGljb24ucG5nJyxcclxuICAgICAgICAgICAgJ3NpemVzJzogJzI2eDIxJyxcclxuICAgICAgICAgICAgJ3R5cGUnOiAnaW1hZ2UvcG5nJyxcclxuICAgICAgICAgICAgJ3B1cnBvc2UnOiAnYW55IG1hc2thYmxlJ1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJ3NyYyc6ICdhc3NldHMvc21hbGxMb2dvLnBuZycsXHJcbiAgICAgICAgICAgICdzaXplcyc6ICcyMTZ4NjInLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdpbWFnZS9wbmcnLFxyXG4gICAgICAgICAgICAncHVycG9zZSc6ICdhbnkgbWFza2FibGUnXHJcbiAgICAgICAgICB9LCAqLyJdLAogICJtYXBwaW5ncyI6ICI7QUFBcVgsU0FBUyxlQUFlO0FBQzdZLFNBQVMsb0JBQW9CO0FBQzdCLE9BQU8sV0FBVztBQUVsQixJQUFPLHNCQUFRLGFBQWE7QUFBQSxFQUMxQixTQUFTO0FBQUEsSUFDUCxNQUFNO0FBQUEsSUFDTixRQUFRO0FBQUEsTUFDTixjQUFjO0FBQUEsTUFDZCxVQUFVO0FBQUEsUUFDUixNQUFNO0FBQUEsUUFDTixZQUFZO0FBQUEsUUFDWixXQUFXO0FBQUEsUUFDWCxTQUFTO0FBQUEsUUFDVCxhQUFhO0FBQUEsUUFDYixrQkFBa0I7QUFBQSxRQUNsQixPQUFPO0FBQUEsVUFDTDtBQUFBLFlBQ0UsT0FBTztBQUFBLFlBQ1AsU0FBUztBQUFBLFlBQ1QsUUFBUTtBQUFBLFlBQ1IsV0FBVztBQUFBLFVBQ2I7QUFBQSxVQUNBO0FBQUEsWUFDRSxPQUFPO0FBQUEsWUFDUCxTQUFTO0FBQUEsWUFDVCxRQUFRO0FBQUEsWUFDUixXQUFXO0FBQUEsVUFDYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFFBYUY7QUFBQTtBQUFBLE1BRUY7QUFBQSxNQUNBLFlBQVk7QUFBQSxRQUNWLFNBQVM7QUFBQSxNQUNYO0FBQUEsSUFDRixDQUFDO0FBQUEsRUFDSDtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
